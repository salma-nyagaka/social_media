# name: Build and Push Docker Image

# on:
#   push:
#     branches:
#       - fix-deployment-issues

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v2
#         with:
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/social_media:latest

#       - name: Deploy
#         run: |
#           echo "Starting Docker Compose with environment variables..."
#           echo "DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}" > .env
#           echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
#           echo "DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}" >> .env
#           echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
#           echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
#           # echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
#           cat .env
#           docker-compose up -d
name: Build and Push Docker Image

on:
  push:
    branches:
      - fix-deployment-issues

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: limsapi/social_media:latest

      - name: Deploy to EC2
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
          DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd /opt/twiga/social_media || mkdir -p /opt/twiga/social_media && cd /opt/twiga/social_media
            git pull origin develop
            
            # Ensure the .env file is created
            echo "Creating .env file with secrets..."
            echo "SECRET_KEY=${SECRET_KEY}" > .env
            echo "DATABASE_URL=${DATABASE_URL}" >> .env
            echo "EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}" >> .env
            echo "DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}" >> .env
            echo "DOMAIN_NAME=${DOMAIN_NAME}" >> .env
            cat .env
            
            # Pull the latest Docker images
            docker-compose pull
            
            # Remove any existing containers
            docker-compose down
            
            # Start Docker containers without rebuilding every time
            docker-compose up -d --build
          
