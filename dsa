from celery import shared_task
from django.core.mail import EmailMultiAlternatives, get_connection, send_mass_mail
from django.template.loader import render_to_string
from django.utils.html import strip_tags
from django.conf import settings
from .models import User
from datetime import datetime, timedelta
import jwt
from django.db import transaction

@shared_task
def send_email_task(
    subject,
    message,
    from_email,
    recipient_list,
    html_template=None,
    context=None,
    bcc=None,
):
    if html_template:
        if context is None:
            context = {}
        context["message"] = message
        html_content = render_to_string(html_template, context)
        text_content = strip_tags(html_content)
    else:
        html_content = message
        text_content = strip_tags(message)

    email = EmailMultiAlternatives(
        subject, text_content, from_email, recipient_list, bcc=bcc
    )
    if html_template:
        email.attach_alternative(html_content, "text/html")

    email.send()


@shared_task
def send_batch_email_task(email_messages):
    connection = get_connection()
    connection.open()
    send_mass_mail(email_messages, fail_silently=False, connection=connection)
    connection.close()

@transaction.atomic()
def create_user_and_send_email(validated_data):
    user = User.objects.create_user(**validated_data)
    exp = datetime.utcnow() + timedelta(hours=24)
    token = jwt.encode(
        {"user_id": user.id, "exp": exp}, settings.SECRET_KEY, algorithm="HS256"
    )
    
    domain = settings.DOMAIN_NAME
    
    send_email_task.delay(
        subject="New account created",
        message='',
        from_email="salmanyagaka@gmail.com",
        recipient_list=[user.email],
        html_template="activation_email.html",
        context={"context": "{}/users/email_confirmation/{}".format(domain, str(token))},
    )

    return user
